---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import Pulse from "@/components/Pulse.astro";

import presentation from "@/data/presentation";
import projects from "@/data/projects";

const posts = (await getCollection("posts")).sort(function (first, second) {
	return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});
---

<style>
	h3 {
		font-family: "Source Code Pro";
	}
	.typing-title {
		font-family: "Source Code Pro";
		white-space: nowrap;
		padding-right: 6px; /* Add padding for the block cursor */
		display: inline-block;
	}
	.cursor {
		display: inline-block;
		width: 10px;
		height: 1em;
		background-color: #fff;
	}
	.post-card {
		margin-right: 1rem; /* Adjust the margin as needed */
	}
</style>

<Layout>
	<main class="flex flex-col gap-20">
		<article
			class="relative flex cursor-pointer flex-col gap-8 rounded-xl border border-neutral-800 p-4 transition-all duration-300 hover:-translate-y-2 hover:border-neutral-700 hover:shadow-[0_5px_60px_-5px_rgba(249,115,22,0.2)] md:justify-end md:gap-12"
			onclick="window.location.href = '/about';"
		>
			<div class="absolute right-4 top-4">
				<Pulse />
			</div>
			<div class="flex flex-col md:flex-row md:items-center">
				<div class="md:order-2 md:w-1/3">
					{presentation.profile && <Image src={presentation.profile} class="mb-4 w-full md:mb-0" alt="Your Profile" width="500" height="500" />}
				</div>
				<div class="md:w-2/3">
					<h1 class="text-3xl text-neutral-100">
						<span class="typing-title" id="typing-title"></span>
						<script>
							import presentation from "@/data/presentation";
							import theme from "@/data/theme";

							document.addEventListener("DOMContentLoaded", function () {
								// Text to be typed
								const textToType = presentation.title;
								const typingSpeed = 100; // Adjust the typing speed (milliseconds per character)

								const typingTitle = document.getElementById("typing-title");

								function typeText() {
									let i = 0;
									const typeInterval = setInterval(function () {
										if (i < textToType.length) {
											typingTitle.innerHTML += textToType.charAt(i);
											i++;
										} else {
											clearInterval(typeInterval);
											// Start blinking cursor after typing
											blinkCursor();
										}
									}, typingSpeed);
								}

								typeText();

								function blinkCursor() {
									const cursor = document.createElement("span");
									const emoji = document.createElement("span");
									emoji.textContent = "👋🏼";
									cursor.className = "cursor";
									cursor.textContent = "|"; // You can adjust the cursor appearance here
									cursor.style.color = theme.colors.primary;
									typingTitle?.appendChild(emoji);
									typingTitle?.appendChild(cursor);
									setInterval(function () {
										cursor.style.visibility = cursor.style.visibility === "visible" ? "hidden" : "visible";
									}, 500); // Adjust the blinking speed
								}
							});
						</script>
					</h1>
					<div class="max-w-[60ch] pt-4 leading-6" set:html={convertAsteriskToStrongTag(presentation.description)} />
					<SocialLinks />
				</div>
			</div>
		</article>
		<article class="flex flex-col gap-8">
			<header class="flex w-full flex-row justify-between gap-2">
				<h3 class="text-2xl text-neutral-100">Latest posts</h3>
				<Link href="/posts" label="See all posts" isUnderline target="_self" />
			</header>
			{posts.length === 0 && <p>Soon, stay connected 👀...</p>}

			<section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
				{posts.length !== 0 && posts.slice(0, 2).map((post) => <PostCard publishedAt={post.data.publishedAt} title={post.data.title} description={post.data.description} slug={post.slug} />)}
			</section>
		</article>

		<article class="flex flex-col gap-8">
			<header class="flex w-full flex-row justify-between gap-2">
				<h3 class="text-2xl text-neutral-100">
					Selected projects ({projects.length})
				</h3>
			</header>
			{projects.length === 0 && <p>Oops, I must work^^^^^</p>}

			<section class="flex flex-col gap-4">
				{projects.length !== 0 && projects.map((project) => <ProjectCard {...project} />)}
			</section>
		</article>

		<article class="flex flex-col gap-8">
			<header class="flex w-full flex-row justify-between gap-2">
				<h3 class="text-2xl text-neutral-100">Get in touch</h3>
			</header>
			<p>
				Email me at <Link href={`mailto:${presentation.mail}`} label={presentation.mail} /> or follow me via my social links.
			</p>

			<SocialLinks />
		</article>
	</main>
</Layout>
